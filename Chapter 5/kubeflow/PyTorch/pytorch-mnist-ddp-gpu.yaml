apiVersion: "kubeflow.org/v1"
kind: "PyTorchJob"
metadata:
  name: "pytorch-dist-mnist-nccl"
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template:
        spec:
          containers:
            - name: pytorch
              image: kubeflow/pytorch-dist-mnist:v1-736c814
              command: ["python", "-u", "/opt/mnist/src/mnist_DDP.py"]
              args: ["--backend", "nccl", "--dir", "/mnt/pytorch/logs", "--save-model"]
              resources: 
                limits:
                  nvidia.com/gpu: 1
              volumeMounts:
              - mountPath: /mnt/pytorch
                name: training
                subPath: pytorch
              - mountPath: /opt/mnist/src/
                name: pytorchjob-mnist-ddp
          volumes:
            - name: training
              persistentVolumeClaim:
                claimName: kubelow-efs-shared
                readOnly: false
            - name: pytorchjob-mnist-ddp
              configMap:
                name: pytorchjob-mnist-ddp
          nodeSelector:
            node.kubernetes.io/instance-type: g6.xlarge
    Worker:
      replicas: 1
      restartPolicy: OnFailure
      template:
        spec:
          containers: 
            - name: pytorch
              image: kubeflow/pytorch-dist-mnist:v1-736c814
              command: ["python", "/opt/mnist/src/mnist_DDP.py"]
              args: ["--backend", "nccl", "--dir", "/mnt/pytorch/logs", "--save-model"]
              resources: 
                limits:
                  nvidia.com/gpu: 1
              volumeMounts:
              - mountPath: /opt/mnist/src/
                name: pytorchjob-mnist-ddp
          volumes:
          - name: pytorchjob-mnist-ddp
            configMap:
              name: pytorchjob-mnist-ddp
          nodeSelector:
            node.kubernetes.io/instance-type: g6.xlarge
