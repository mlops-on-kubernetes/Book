# Make sure to increase resource requests and limits before using this example in production.
# For examples with more realistic resource configuration, see
# ray-cluster.complete.large.yaml and
# ray-cluster.autoscaler.large.yaml.
apiVersion: ray.io/v1
kind: RayService
metadata:
  name: rs-text-sum
spec:
  # serveConfigV2 takes a yaml multi-line scalar, which should be a Ray Serve multi-application config. 
  # See https://docs.ray.io/en/latest/serve/multi-app.html.
  serveConfigV2: |
    applications:
      - name: text_ml_app
        route_prefix: /summarize_translate
        runtime_env:
          working_dir: "https://github.com/mlops-on-kubernetes/Book/raw/refs/heads/main/Chapter%206/serve-config.zip"
          pip:
            - torch
            - transformers
        import_path: text_ml.app
        deployments:
          - name: Translator
            min_replicas: 1
            max_replicas: 2
            ray_actor_options:
              num_cpus: 0.2
            user_config:
              language: french
          - name: Summarizer
            num_replicas: 4
            ray_actor_options:
              num_cpus: 0.2
  rayClusterConfig:
    rayVersion: '2.34.0' # should match the Ray version in the image of the containers
    enableInTreeAutoscaling: true
    autoscalerOptions:
      upscalingMode: Conservative
      idleTimeoutSeconds: 120
    ######################headGroupSpecs#################################
    # Ray head pod template.
    headGroupSpec:
      rayStartParams:
        dashboard-host: '0.0.0.0'
      # Head Pod Template
      template:
        spec:
          containers:
            - name: ray-head
              image: rayproject/ray:2.34.0
              resources:
                limits:
                  cpu: 2
                  memory: 4Gi
                requests:
                  cpu: 2
                  memory: 4Gi
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265 # Ray dashboard
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
    ######################workerGroupSpecs#################################
    workerGroupSpecs:
      # the pod replicas in this group typed worker
      - replicas: 2
        minReplicas: 2
        maxReplicas: 5
        # logical group name, for this called small-group, also can be functional
        groupName: small-group
        rayStartParams: {}
        # Worker Pod Template
        template:
          spec:
            containers:
              - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
                image: rayproject/ray:2.34.0
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh","-c","ray stop"]
                resources:
                  limits:
                    cpu: "1"
                    memory: "4Gi"
                  requests:
                    cpu: "500m"
                    memory: "2Gi"
